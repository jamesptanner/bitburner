[
    {
        "name": "contract-17904-Netburners.cct",
        "host": "omega-net",
        "type": "Generate IP Addresses",
        "data": "818372144",
        "desc": "Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\n\n 818372144\n\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\n\n Examples:\n\n 25525511135 -> [255.255.11.135, 255.255.111.35]\n 1938718066 -> [193.87.180.66]"
    },
    {
        "name": "contract-45790-CyberSec.cct",
        "host": "millenium-fitness",
        "type": "Total Ways to Sum",
        "data": 45,
        "desc": "It is possible write four as a sum in exactly four different ways:\n\n     3 + 1\n     2 + 2\n     2 + 1 + 1\n     1 + 1 + 1 + 1\n\n How many different ways can the number 45 be written as a sum of at least two positive integers?"
    },
    {
        "name": "contract-85777.cct",
        "host": "harakiri-sushi",
        "type": "Generate IP Addresses",
        "data": "497914020",
        "desc": "Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\n\n 497914020\n\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\n\n Examples:\n\n 25525511135 -> [255.255.11.135, 255.255.111.35]\n 1938718066 -> [193.87.180.66]"
    },
    {
        "name": "contract-143133.cct",
        "host": "phantasy",
        "type": "Algorithmic Stock Trader I",
        "data": [
            63,
            188,
            179,
            145,
            99,
            90,
            138,
            156,
            61,
            74,
            131,
            162,
            92
        ],
        "desc": "You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\n\n 63,188,179,145,99,90,138,156,61,74,131,162,92\n\n Determine the maximum possible profit you can earn using at most one transaction (i.e. you can only buy and sell the stock once). If no profit can be made then the answer should be 0. Note that you have to buy the stock before you can sell it"
    },
    {
        "name": "contract-587660.cct",
        "host": "phantasy",
        "type": "Find All Valid Math Expressions",
        "data": [
            "485755",
            -46
        ],
        "desc": "You are given the following string which contains only digits between 0 and 9:\n\n 485755\n\n You are also given a target number of -46. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.\n\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\n\n [\"485755\", -46]\n\n NOTE: Numbers in the expression cannot have leading 0's. In other words, \"1+01\" is not a valid expression Examples:\n\n Input: digits = \"123\", target = 6\n Output: [1+2+3, 1*2*3]\n\n Input: digits = \"105\", target = 5\n Output: [1*0+5, 10-5]"
    },
    {
        "name": "contract-936049-FoodNStuff.cct",
        "host": "phantasy",
        "type": "Find All Valid Math Expressions",
        "data": [
            "634951559",
            6
        ],
        "desc": "You are given the following string which contains only digits between 0 and 9:\n\n 634951559\n\n You are also given a target number of 6. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.\n\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\n\n [\"634951559\", 6]\n\n NOTE: Numbers in the expression cannot have leading 0's. In other words, \"1+01\" is not a valid expression Examples:\n\n Input: digits = \"123\", target = 6\n Output: [1+2+3, 1*2*3]\n\n Input: digits = \"105\", target = 5\n Output: [1*0+5, 10-5]"
    },
    {
        "name": "contract-287470-CyberSec.cct",
        "host": "alpha-ent",
        "type": "Array Jumping Game",
        "data": [
            3,
            5,
            10,
            0,
            7,
            1,
            9,
            0,
            0,
            0,
            0,
            7,
            6,
            7,
            0,
            9,
            0,
            10,
            4
        ],
        "desc": "You are given the following array of integers:\n\n 3,5,10,0,7,1,9,0,0,0,0,7,6,7,0,9,0,10,4\n\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \n\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\n\n Your answer should be submitted as 1 or 0, representing true and false respectively"
    },
    {
        "name": "contract-801345-CyberSec.cct",
        "host": "alpha-ent",
        "type": "Unique Paths in a Grid I",
        "data": [
            3,
            13
        ],
        "desc": "You are in a grid with 3 rows and 13 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\n\n NOTE: The data returned for this contract is an array with the number of rows and columns:\n\n [3, 13]"
    },
    {
        "name": "contract-369400.cct",
        "host": "zb-institute",
        "type": "Generate IP Addresses",
        "data": "34230572",
        "desc": "Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\n\n 34230572\n\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\n\n Examples:\n\n 25525511135 -> [255.255.11.135, 255.255.111.35]\n 1938718066 -> [193.87.180.66]"
    },
    {
        "name": "contract-787639.cct",
        "host": "joesguns",
        "type": "Unique Paths in a Grid I",
        "data": [
            10,
            14
        ],
        "desc": "You are in a grid with 10 rows and 14 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\n\n NOTE: The data returned for this contract is an array with the number of rows and columns:\n\n [10, 14]"
    },
    {
        "name": "contract-514912.cct",
        "host": "zer0",
        "type": "Generate IP Addresses",
        "data": "1552912999",
        "desc": "Given the following string containing only digits, return an array with all possible valid IP address combinations that can be created from the string:\n\n 1552912999\n\n Note that an octet cannot begin with a '0' unless the number itself is actually 0. For example, '192.168.010.1' is not a valid IP.\n\n Examples:\n\n 25525511135 -> [255.255.11.135, 255.255.111.35]\n 1938718066 -> [193.87.180.66]"
    },
    {
        "name": "contract-811914.cct",
        "host": "neo-net",
        "type": "Unique Paths in a Grid II",
        "data": [
            [
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0
            ],
            [
                0,
                1,
                0,
                1,
                0,
                0,
                0,
                1,
                1,
                1,
                0
            ],
            [
                0,
                1,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        ],
        "desc": "You are located in the top-left corner of the following grid:\n\n 0,1,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,1,0,0,0,\n0,1,0,1,0,0,0,1,1,1,0,\n0,1,0,0,1,0,0,0,0,0,0,\n\n You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.\n\n Determine how many unique paths there are from start to finish.\n\n NOTE: The data returned for this contract is an 2D array of numbers representing the grid."
    },
    {
        "name": "contract-471446-FoodNStuff.cct",
        "host": "aerocorp",
        "type": "Unique Paths in a Grid I",
        "data": [
            7,
            3
        ],
        "desc": "You are in a grid with 7 rows and 3 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\n\n NOTE: The data returned for this contract is an array with the number of rows and columns:\n\n [7, 3]"
    },
    {
        "name": "contract-277486.cct",
        "host": "galactic-cyber",
        "type": "Array Jumping Game",
        "data": [
            10,
            5,
            9,
            5,
            3,
            4,
            9,
            2,
            9,
            5,
            4,
            0,
            4,
            4,
            3,
            9,
            5,
            10,
            8,
            0,
            10,
            2,
            7,
            3
        ],
        "desc": "You are given the following array of integers:\n\n 10,5,9,5,3,4,9,2,9,5,4,0,4,4,3,9,5,10,8,0,10,2,7,3\n\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \n\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\n\n Your answer should be submitted as 1 or 0, representing true and false respectively"
    },
    {
        "name": "contract-780663.cct",
        "host": "unitalife",
        "type": "Find All Valid Math Expressions",
        "data": [
            "1083359578",
            -100
        ],
        "desc": "You are given the following string which contains only digits between 0 and 9:\n\n 1083359578\n\n You are also given a target number of -100. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.\n\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\n\n [\"1083359578\", -100]\n\n NOTE: Numbers in the expression cannot have leading 0's. In other words, \"1+01\" is not a valid expression Examples:\n\n Input: digits = \"123\", target = 6\n Output: [1+2+3, 1*2*3]\n\n Input: digits = \"105\", target = 5\n Output: [1*0+5, 10-5]"
    },
    {
        "name": "contract-497420-FoodNStuff.cct",
        "host": ".",
        "type": "Array Jumping Game",
        "data": [
            8,
            9,
            6,
            0,
            3,
            0,
            5,
            7,
            10,
            2,
            5,
            0,
            9,
            0,
            2,
            10,
            4,
            8,
            7,
            5
        ],
        "desc": "You are given the following array of integers:\n\n 8,9,6,0,3,0,5,7,10,2,5,0,9,0,2,10,4,8,7,5\n\n Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. \n\nAssuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.\n\n Your answer should be submitted as 1 or 0, representing true and false respectively"
    },
    {
        "name": "contract-868245-Netburners.cct",
        "host": ".",
        "type": "Merge Overlapping Intervals",
        "data": [
            [
                2,
                5
            ],
            [
                7,
                17
            ],
            [
                11,
                15
            ],
            [
                3,
                5
            ],
            [
                5,
                11
            ],
            [
                22,
                29
            ],
            [
                1,
                10
            ],
            [
                4,
                10
            ],
            [
                15,
                21
            ],
            [
                22,
                29
            ],
            [
                19,
                23
            ],
            [
                4,
                6
            ],
            [
                18,
                23
            ],
            [
                13,
                21
            ],
            [
                11,
                20
            ]
        ],
        "desc": "Given the following array of array of numbers representing a list of intervals, merge all overlapping intervals.\n\n [[2,5],[7,17],[11,15],[3,5],[5,11],[22,29],[1,10],[4,10],[15,21],[22,29],[19,23],[4,6],[18,23],[13,21],[11,20]]\n\n Example:\n\n [[1, 3], [8, 10], [2, 6], [10, 16]]\n\n would merge into [[1, 6], [8, 16]].\n\n The intervals must be returned in ASCENDING order. You can assume that in an interval, the first number will always be smaller than the second."
    },
    {
        "name": "contract-524584-FoodNStuff.cct",
        "host": "nwo",
        "type": "Spiralize Matrix",
        "data": [
            [
                16
            ],
            [
                43
            ],
            [
                37
            ],
            [
                42
            ],
            [
                2
            ],
            [
                18
            ],
            [
                25
            ],
            [
                13
            ],
            [
                21
            ],
            [
                3
            ],
            [
                1
            ],
            [
                19
            ],
            [
                5
            ]
        ],
        "desc": "Given the following array of arrays of numbers representing a 2D matrix, return the elements of the matrix as an array in spiral order:\n\n    [\n        [16]\n        [43]\n        [37]\n        [42]\n        [ 2]\n        [18]\n        [25]\n        [13]\n        [21]\n        [ 3]\n        [ 1]\n        [19]\n        [ 5]\n    ]\n\nHere is an example of what spiral order should be:\n\n     [\n         [1, 2, 3]\n         [4, 5, 6]\n         [7, 8, 9]\n     ]\n\n Answer: [1, 2, 3, 6, 9, 8 ,7, 4, 5]\n\n Note that the matrix will not always be square:\n\n     [\n         [1,  2,  3,  4]\n         [5,  6,  7,  8]\n         [9, 10, 11, 12]\n     ]\n\n Answer: [1, 2, 3, 4, 8, 12, 11, 10, 9, 5, 6, 7]"
    },
    {
        "name": "contract-812735.cct",
        "host": "nwo",
        "type": "Sanitize Parentheses in Expression",
        "data": "((()a))((aa(aaaa",
        "desc": "Given the following string:\n\n ((()a))((aa(aaaa\n\n remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.\n\n IMPORTANT: The string may contain letters, not just parentheses. Examples:\n \"()())()\" -> [()()(), (())()]\n \"(a)())()\" -> [(a)()(), (a())()]\n \")( -> [\"\"]"
    },
    {
        "name": "contract-736283-FoodNStuff.cct",
        "host": "run4theh111z",
        "type": "Algorithmic Stock Trader III",
        "data": [
            111,
            69,
            190,
            190,
            102,
            24,
            149,
            36,
            149,
            182
        ],
        "desc": "You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\n\n 111,69,190,190,102,24,149,36,149,182\n\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\n\n If no profit can be made, then the answer should be 0"
    },
    {
        "name": "contract-411332.cct",
        "host": "kuai-gong",
        "type": "Find All Valid Math Expressions",
        "data": [
            "152691943860",
            -3
        ],
        "desc": "You are given the following string which contains only digits between 0 and 9:\n\n 152691943860\n\n You are also given a target number of -3. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.\n\n The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:\n\n [\"152691943860\", -3]\n\n NOTE: Numbers in the expression cannot have leading 0's. In other words, \"1+01\" is not a valid expression Examples:\n\n Input: digits = \"123\", target = 6\n Output: [1+2+3, 1*2*3]\n\n Input: digits = \"105\", target = 5\n Output: [1*0+5, 10-5]"
    },
    {
        "name": "contract-555468-FoodNStuff.cct",
        "host": "kuai-gong",
        "type": "Unique Paths in a Grid I",
        "data": [
            3,
            8
        ],
        "desc": "You are in a grid with 3 rows and 8 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\n\n NOTE: The data returned for this contract is an array with the number of rows and columns:\n\n [3, 8]"
    },
    {
        "name": "contract-425572.cct",
        "host": "omnitek",
        "type": "Algorithmic Stock Trader I",
        "data": [
            2,
            135,
            62,
            78,
            109,
            118,
            27,
            77,
            155,
            43,
            138,
            197,
            94,
            161,
            78,
            64,
            165,
            19,
            110,
            191,
            195,
            194,
            71,
            188,
            38,
            194,
            67,
            52,
            163,
            17,
            105,
            28,
            156,
            99,
            194,
            186,
            50,
            66,
            87,
            137,
            53,
            19,
            121,
            66,
            156,
            149,
            83,
            147,
            200
        ],
        "desc": "You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\n\n 2,135,62,78,109,118,27,77,155,43,138,197,94,161,78,64,165,19,110,191,195,194,71,188,38,194,67,52,163,17,105,28,156,99,194,186,50,66,87,137,53,19,121,66,156,149,83,147,200\n\n Determine the maximum possible profit you can earn using at most one transaction (i.e. you can only buy and sell the stock once). If no profit can be made then the answer should be 0. Note that you have to buy the stock before you can sell it"
    },
    {
        "name": "contract-434034-FoodNStuff.cct",
        "host": "defcomm",
        "type": "Algorithmic Stock Trader III",
        "data": [
            94,
            75,
            101,
            171,
            139,
            190,
            19,
            15,
            135,
            138,
            44,
            44,
            44,
            88,
            88,
            190,
            169,
            154,
            3,
            3,
            43,
            199,
            109,
            62,
            35,
            45,
            19,
            61,
            171,
            6,
            148,
            129,
            171,
            198,
            125,
            16,
            26,
            87,
            36
        ],
        "desc": "You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\n\n 94,75,101,171,139,190,19,15,135,138,44,44,44,88,88,190,169,154,3,3,43,199,109,62,35,45,19,61,171,6,148,129,171,198,125,16,26,87,36\n\n Determine the maximum possible profit you can earn using at most two transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.\n\n If no profit can be made, then the answer should be 0"
    }
]